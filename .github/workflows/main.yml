# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. # Triggers the workflow on push or pull request
# events; push events only for dev, master and release branches
on:
  push:
    branches:
      - dev
      - master
      - release
      - 'release-*'

  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Set env for dev branch
        if: endsWith(github.ref, '/dev')
        run: |
          echo "EXECUTE_TESTS_ON=dev" >> $GITHUB_ENV
          
      - name: Set env for master branch
        if: endsWith(github.ref, '/master')
        run: |
          echo "EXECUTE_TESTS_ON=master" >> $GITHUB_ENV

      - name: Set env for release branches
        if: contains(github.ref, 'release')
        run: |
          echo "EXECUTE_TESTS_ON=master" >> $GITHUB_ENV

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install pre-dependencies
        run: |
              sudo apt-get update
              sudo apt-get install gcc
              sudo apt-get install libgfortran4
              sudo apt-get install gfortran
              sudo apt-get install graphviz
              sudo apt-get install coinor-cbc
              sudo apt-get install wkhtmltopdf

      # Runs a set of commands using the runners shell
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel
          pip install .[dev]

      - name: Test with pytest
        run: |
          coverage run -m pytest tests/

      - name: Check test coverage
        run: |
          coverage report -m

      - name: Report to coveralls
        run: |
          coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_SERVICE_NAME: github

      - name: Lint with black
        run: |
          black --check . --exclude docs/
